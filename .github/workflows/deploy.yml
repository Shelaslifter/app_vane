# Nombre del flujo de trabajo
name: Deploy Flutter Web to GitHub Pages

on:
  # Se activa cada vez que subes cambios a la rama 'main'
  push:
    branches: [ "main" ]

  # Permite que lo ejecutes manually si quieres
  workflow_dispatch:

# Establece los permisos
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Descarga tu c√≥digo
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configura Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'

      # 3. Construye la app web
      - name: Build Flutter web
        run: flutter build web --release --web-renderer canvaskit --base-href /app_vane/

      # 4. (NUEVO) Crea el archivo .nojekyll para desactivar Jekyll
      - name: Create .nojekyll file
        run: touch build/web/.nojekyll

      # 5. (NUEVO - PARA DEPURAR) Lista los archivos en el directorio de salida
      - name: List build files
        run: ls -R build/web

      # 6. Sube el resultado para el siguiente paso
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/web

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Entrega el resultado a los servidores de GitHub
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4